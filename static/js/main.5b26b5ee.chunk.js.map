{"version":3,"sources":["components/PersonListItem.js","components/People.js","components/Person.js","components/Film.js","components/Films.js","components/App.js","index.js"],"names":["Wrapper","styled","div","props","theme","color","PersonListItem","name","id","to","key","People","useState","people","setPeople","value","setValue","useEffect","axios","get","then","res","console","log","data","results","className","type","onChange","target","placeholder","style","fontSize","arr","filter","toUpperCase","includes","map","person","index","length","renderList","Person","setPerson","personId","useParams","gender","height","hair_color","films","film","numberOfFilm","Film","setFilm","filmId","producer","title","episode_id","release_date","Films","setFilms","Button","button","btnTextColor","btnBg","themeDark","themeLight","App","isBlack","setTheme","basename","onClick","document","body","background","path","exact","rootElement","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.5b26b5ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 20px;\r\n  a {\r\n    color: ${(props) => props.theme.color};\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  a:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport function PersonListItem({ name, id }) {\r\n  return (\r\n    <Wrapper>\r\n      <Link to={`/people/${id}`} key={id}>\r\n        {name}\r\n      </Link>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { PersonListItem } from \"./PersonListItem\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n`;\r\n\r\nexport function People() {\r\n  const [people, setPeople] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://swapi.dev/api/people/\").then((res) => {\r\n      console.log(res.data.results);\r\n      setPeople(res.data.results);\r\n    });\r\n  }, [setPeople]);\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setValue(value);\r\n  };\r\n\r\n  const renderList = () => {\r\n    const arr = people\r\n      .filter(({ name }) => name.toUpperCase().includes(value.toUpperCase()))\r\n      .map((person, index) => (\r\n        <PersonListItem name={person.name} id={index + 1} key={index} />\r\n      ));\r\n    return arr.length ? (\r\n      arr\r\n    ) : (\r\n      <h2 className=\"text-center\">\r\n        <span>List is empty</span>\r\n      </h2>\r\n    );\r\n  };\r\n\r\n  // const toPerson = useCallback((person, index) => (\r\n  //   <PersonListItem name={person.name} id={index + 1} key={index} />\r\n  // ));\r\n\r\n  // return <div>{people.map(toPerson)}</div>;\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Choose a hero\"\r\n          className=\"my-4\"\r\n          style={{ fontSize: \"1.5rem\" }}\r\n        />\r\n        {renderList()}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 1.2rem;\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n  a {\r\n    color: ${(props) => props.theme.color};\r\n    text-decoration: none;\r\n  }\r\n  a:hover {\r\n    color: gold;\r\n  }\r\n  a.back {\r\n    color: blue;\r\n  }\r\n  i {\r\n    color: darkgrey;\r\n  }\r\n`;\r\n\r\nexport function Person(props) {\r\n  const [person, setPerson] = useState();\r\n  let { personId } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/people/${personId}/`).then((res) => {\r\n      console.log(res);\r\n      setPerson(res.data);\r\n    });\r\n  }, [setPerson, personId]);\r\n\r\n  if (!person) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        <Link to=\"/\" className=\"back\">\r\n          Back\r\n        </Link>\r\n        <div>\r\n          <span>\r\n            <i>name:</i> {person.name}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>gender:</i> {person.gender}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>height:</i> {person.height}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>hair:</i> {person.hair_color}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <i>films:</i>\r\n          </p>\r\n          <ul>\r\n            {person.films.map((film) => {\r\n              const numberOfFilm = film[film.length - 2];\r\n              return (\r\n                <li key={film}>\r\n                  <Link to={`/films/${numberOfFilm}`}>{film}</Link>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 1.2rem;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  i {\r\n    color: darkgrey;\r\n  }\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n`;\r\n\r\nexport function Film() {\r\n  const [film, setFilm] = useState();\r\n  let { filmId } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/films/${filmId}/`).then((res) => {\r\n      console.log(res);\r\n      setFilm(res.data);\r\n    });\r\n  }, [setFilm, filmId]);\r\n\r\n  if (!film) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        <Link to=\"/\">Back</Link>\r\n        <div>\r\n          <span>\r\n            <i>producer:</i> {film.producer}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>title:</i> {film.title}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>episode:</i> {film.episode_id}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>release date:</i> {film.release_date}\r\n          </span>\r\n        </div>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  div {\r\n    margin-bottom: 20px;\r\n  }\r\n  a {\r\n    color: ${(props) => props.theme.color};\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  a:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport function Films() {\r\n  const [films, setFilms] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/films/`).then((res) => {\r\n      console.log(res);\r\n      setFilms(res.data.results);\r\n    });\r\n  }, [setFilms]);\r\n\r\n  if (!films) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        {films.map((film) => (\r\n          <div key={film.episode_id}>\r\n            <Link to={`/films/${film.episode_id}`}>{film.title}</Link>\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\n\r\nimport { People } from \"./People\";\r\nimport { Person } from \"./Person\";\r\nimport { Film } from \"./Film\";\r\nimport { Films } from \"./Films\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n  li {\r\n    margin: 0 20px;\r\n    a {\r\n      color: gold;\r\n      font-size: 2rem;\r\n      text-decoration: none;\r\n    }\r\n    a:hover {\r\n      color: orange;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: ${(props) => props.theme.btnTextColor};\r\n  background: ${(props) => props.theme.btnBg};\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst themeDark = {\r\n  // bg: \"black\",\r\n  color: \"white\",\r\n  btnBg: \"white\",\r\n  btnTextColor: \"black\",\r\n};\r\n\r\nconst themeLight = {\r\n  // bg: \"white\",\r\n  color: \"black\",\r\n  btnBg: \"black\",\r\n  btnTextColor: \"white\",\r\n};\r\n\r\nexport default function App() {\r\n  const [isBlack, setTheme] = useState(false);\r\n  return (\r\n    <>\r\n      <Router basename=\"swapi-tm\">\r\n        <ThemeProvider theme={isBlack ? themeDark : themeLight}>\r\n          <Wrapper className=\"container\">\r\n            <ul className=\"nav\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/\">People</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/films/\">Films</Link>\r\n              </li>\r\n            </ul>\r\n            <Button\r\n              onClick={() => {\r\n                setTheme(!isBlack);\r\n                document.body.style.background = isBlack ? \"white\" : \"black\";\r\n              }}\r\n            >\r\n              {isBlack ? \"Light\" : \"Dark\"}\r\n            </Button>\r\n          </Wrapper>\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <People />\r\n            </Route>\r\n            <Route path=\"/people/:personId\">\r\n              <Person />\r\n            </Route>\r\n            <Route path=\"/films/\" exact>\r\n              <Films />\r\n            </Route>\r\n            <Route path=\"/films/:filmId\">\r\n              <Film />\r\n            </Route>\r\n          </Switch>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}
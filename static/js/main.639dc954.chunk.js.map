{"version":3,"sources":["components/PersonListItem.js","components/People.js","components/Person.js","components/Film.js","components/Films.js","components/App.js","index.js"],"names":["Wrapper","styled","div","props","theme","color","PersonListItem","name","id","to","key","People","useState","people","setPeople","value","setValue","isLoading","setIsLoading","useEffect","axios","get","then","res","data","results","peopleFiltered","useMemo","filter","toUpperCase","includes","className","type","onChange","target","placeholder","style","fontSize","length","map","person","index","NavigationLink","Link","Person","setPerson","personId","useParams","console","log","gender","height","hair_color","films","film","numberOfFilm","Film","setFilm","filmId","producer","title","episode_id","release_date","Films","setFilms","GlobalStyle","createGlobalStyle","bg","NavigationItem","li","Button","button","btnTextColor","btnBg","themeDark","themeLight","App","isBlack","setTheme","basename","onClick","path","exact","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.639dc954.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 20px;\r\n  a {\r\n    color: ${(props) => props.theme.color};\r\n    text-decoration: none;\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  a:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport function PersonListItem({ name, id }) {\r\n  return (\r\n    <Wrapper>\r\n      <Link to={`/people/${id}`} key={id}>\r\n        {name}\r\n      </Link>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { PersonListItem } from \"./PersonListItem\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n`;\r\n\r\nexport function People() {\r\n  const [people, setPeople] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    axios.get(\"https://swapi.dev/api/people/\").then((res) => {\r\n      setPeople(res.data.results);\r\n      setIsLoading(false);\r\n    });\r\n  }, [setPeople, setIsLoading]);\r\n\r\n  const onChange = ({ target: { value } }) => {\r\n    setValue(value);\r\n  };\r\n\r\n  const peopleFiltered = useMemo(\r\n    () =>\r\n      people.filter(({ name }) =>\r\n        name.toUpperCase().includes(value.toUpperCase())\r\n      ),\r\n    [people, value]\r\n  );\r\n\r\n  // const toPerson = useCallback((person, index) => (\r\n  //   <PersonListItem name={person.name} id={index + 1} key={index} />\r\n  // ));\r\n\r\n  // return <div>{people.map(toPerson)}</div>;\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"container\">\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Choose a hero\"\r\n          className=\"my-4\"\r\n          style={{ fontSize: \"1.5rem\" }}\r\n        />\r\n        {isLoading ? (\r\n          <h5 className=\"text-center\">\r\n            <span>Loading...</span>\r\n          </h5>\r\n        ) : peopleFiltered.length ? (\r\n          peopleFiltered.map((person, index) => (\r\n            <PersonListItem name={person.name} id={index + 1} key={index} />\r\n          ))\r\n        ) : (\r\n          <h2 className=\"text-center\">\r\n            <span>List is empty</span>\r\n          </h2>\r\n        )}\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 1.2rem;\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n  a.back {\r\n    color: blue;\r\n  }\r\n  i {\r\n    color: darkgrey;\r\n  }\r\n  li {\r\n    list-style-type: none;\r\n  }\r\n`;\r\n\r\nconst NavigationLink = styled(Link)`\r\n  color: ${(props) => props.theme.color};\r\n  font-size: 1.5rem;\r\n  &:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport function Person(props) {\r\n  const [person, setPerson] = useState();\r\n  let { personId } = useParams();\r\n  console.log(props);\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/people/${personId}/`).then((res) => {\r\n      setPerson(res.data);\r\n    });\r\n  }, [setPerson, personId]);\r\n\r\n  if (!person) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        <Link to=\"/\" className=\"back\">\r\n          Back\r\n        </Link>\r\n        <div>\r\n          <span>\r\n            <i>name:</i> {person.name}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>gender:</i> {person.gender}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>height:</i> {person.height}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>hair:</i> {person.hair_color}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <p>\r\n            <i>films:</i>\r\n          </p>\r\n          <ul>\r\n            {person.films.map((film) => {\r\n              const numberOfFilm = film[film.length - 2];\r\n              return (\r\n                <li key={film}>\r\n                  <NavigationLink to={`/films/${numberOfFilm}`}>\r\n                    {film}\r\n                  </NavigationLink>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  font-size: 1.2rem;\r\n  a {\r\n    text-decoration: none;\r\n  }\r\n  i {\r\n    color: darkgrey;\r\n  }\r\n  span {\r\n    color: ${(props) => props.theme.color};\r\n  }\r\n`;\r\n\r\nexport function Film() {\r\n  const [film, setFilm] = useState();\r\n  let { filmId } = useParams();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/films/${filmId}/`).then((res) => {\r\n      setFilm(res.data);\r\n    });\r\n  }, [setFilm, filmId]);\r\n\r\n  if (!film) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        <Link to=\"/\">Back</Link>\r\n        <div>\r\n          <span>\r\n            <i>producer:</i> {film.producer}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>title:</i> {film.title}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>episode:</i> {film.episode_id}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <span>\r\n            <i>release date:</i> {film.release_date}\r\n          </span>\r\n        </div>\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.div`\r\n  div {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nconst NavigationLink = styled(Link)`\r\n  color: ${(props) => props.theme.color};\r\n  text-decoration: none;\r\n  font-size: 1.5rem;\r\n  &:hover {\r\n    color: gold;\r\n  }\r\n`;\r\n\r\nexport function Films() {\r\n  const [films, setFilms] = useState();\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://swapi.dev/api/films/`).then((res) => {\r\n      setFilms(res.data.results);\r\n    });\r\n  }, [setFilms]);\r\n\r\n  if (!films) {\r\n    return <div className=\"container\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Wrapper>\r\n        {films.map((film) => (\r\n          <div key={film.episode_id}>\r\n            <NavigationLink to={`/films/${film.episode_id}`}>\r\n              {film.title}\r\n            </NavigationLink>\r\n          </div>\r\n        ))}\r\n      </Wrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../styles.css\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport styled, { ThemeProvider, createGlobalStyle } from \"styled-components\";\r\n\r\nimport { People } from \"./People\";\r\nimport { Person } from \"./Person\";\r\nimport { Film } from \"./Film\";\r\nimport { Films } from \"./Films\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  body {\r\n   background: ${(props) => props.theme.bg};\r\n  }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nconst NavigationLink = styled(Link)`\r\n  color: gold;\r\n  font-size: 2rem;\r\n  text-decoration: none;\r\n\r\n  &:hover {\r\n    color: orange;\r\n  }\r\n`;\r\n\r\nconst NavigationItem = styled.li`\r\n  margin: 0 20px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  color: ${(props) => props.theme.btnTextColor};\r\n  background: ${(props) => props.theme.btnBg};\r\n  border-radius: 10px;\r\n  padding: 5px 10px;\r\n`;\r\n\r\nconst themeDark = {\r\n  bg: \"black\",\r\n  color: \"white\",\r\n  btnBg: \"white\",\r\n  btnTextColor: \"black\",\r\n};\r\n\r\nconst themeLight = {\r\n  bg: \"white\",\r\n  color: \"black\",\r\n  btnBg: \"black\",\r\n  btnTextColor: \"white\",\r\n};\r\n\r\nexport default function App() {\r\n  const [isBlack, setTheme] = useState(false);\r\n  return (\r\n    <>\r\n      <Router basename=\"swapi-tm\">\r\n        <ThemeProvider theme={isBlack ? themeDark : themeLight}>\r\n          <GlobalStyle />\r\n          <Wrapper className=\"container\">\r\n            <ul className=\"nav\">\r\n              <NavigationItem className=\"nav-item\">\r\n                <NavigationLink to=\"/\">People</NavigationLink>\r\n              </NavigationItem>\r\n              <NavigationItem className=\"nav-item\">\r\n                <NavigationLink to=\"/films/\">Films</NavigationLink>\r\n              </NavigationItem>\r\n            </ul>\r\n            <Button\r\n              onClick={() => {\r\n                setTheme(!isBlack);\r\n              }}\r\n            >\r\n              {isBlack ? \"Light\" : \"Dark\"}\r\n            </Button>\r\n          </Wrapper>\r\n\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <People />\r\n            </Route>\r\n            <Route path=\"/people/:personId\">\r\n              <Person />\r\n            </Route>\r\n            <Route path=\"/films/\" exact>\r\n              <Films />\r\n            </Route>\r\n            <Route path=\"/films/:filmId\">\r\n              <Film />\r\n            </Route>\r\n          </Switch>\r\n        </ThemeProvider>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./styles.css\";\r\nimport App from \"./components/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}